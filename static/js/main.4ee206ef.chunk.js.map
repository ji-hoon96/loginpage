{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","databaseURL","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","dbService","firestore","authService","auth","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","collection","where","uid","orderBy","get","nweets","console","log","docs","map","doc","data","useEffect","onSubmit","event","preventDefault","updateProfile","type","placeholder","onChange","value","target","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","setNweets","onSnapshot","snapshot","nweetArray","Navigation","to","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAcAA,IAASC,cAVc,CACnBC,OAAOC,0CACPC,YAAYD,oDACZE,WAAWF,gCACXG,UAAUH,gBACVI,cAAcJ,4BACdK,kBAAkBL,gBAClBM,MAAMN,8CAKH,IAAMO,EAAiBV,IAEjBW,EAAUX,IAASY,YACnBC,EAAcb,IAASc,OACvBC,EAAgBf,IAASgB,U,OChBvB,cAA0B,IAAxBC,EAAuB,EAAvBA,YAAYC,EAAW,EAAXA,QACnBC,EAAUC,cADoB,EAEKC,mBAASH,EAAQI,aAFtB,mBAE7BC,EAF6B,KAEdC,EAFc,KAgB9BC,EAAW,uCAAE,4BAAAC,EAAA,sEACIf,EAClBgB,WAAW,UACXC,MAAM,YAAY,KAAKV,EAAQW,KAC/BC,QAAQ,WAAW,QACnBC,MALc,OACTC,EADS,OAMfC,QAAQC,IAAIF,EAAOG,KAAKC,KAAI,SAACC,GAAD,OAAOA,EAAIC,WANxB,2CAAF,qDAQjBC,qBAAU,WACNd,MACF,IACF,IAAMe,EAAQ,uCAAC,WAAMC,GAAN,SAAAf,EAAA,yDACXe,EAAMC,iBACHxB,EAAQI,cAAcC,EAFd,gCAGDL,EAAQyB,cAAc,CACxBrB,YAAYC,IAJT,OAMPN,IANO,2CAAD,sDAUd,OACI,qCACA,uBAAMuB,SAAUA,EAAhB,UACI,uBACII,KAAK,OACLC,YAAY,eACZC,SAlCG,SAACL,GAAS,IAETM,EACVN,EADEO,OAAQD,MAEZvB,EAAkBuB,IA+BVA,MAAOxB,IACX,uBAAOqB,KAAK,SAASG,MAAM,sBAE/B,wBAAQE,QA5CS,WACjBpC,EAAYqC,UACZ/B,EAAQgC,KAAK,KACblC,KAyCA,yBCQOmC,EAxDA,WAAK,IAAD,EACW/B,mBAAS,IADpB,mBACRgC,EADQ,KACDC,EADC,OAEiBjC,mBAAS,IAF1B,mBAERkC,EAFQ,KAEEC,EAFF,OAGkBnC,oBAAS,GAH3B,mBAGRoC,EAHQ,KAGGC,EAHH,OAIQrC,mBAAS,IAJjB,mBAIRsC,EAJQ,KAIFC,EAJE,KAKTd,EAAW,SAACL,GAAS,IAAD,EACMA,EAArBO,OAAQa,EADO,EACPA,KAAKd,EADE,EACFA,MACV,UAAPc,EACCP,EAASP,GACG,aAAPc,GACLL,EAAYT,IAGZP,EAAQ,uCAAG,WAAMC,GAAN,SAAAf,EAAA,yDACbe,EAAMC,iBADO,UAINe,EAJM,gCAKM5C,EAAYiD,+BACnBT,EAAME,GANL,sDAUM1C,EAAYkD,2BAA2BV,EAAME,GAVnD,yEAcTK,EAAS,KAAMI,SAdN,0DAAH,sDAkBhB,OACI,qCACA,uBAAMxB,SAAUA,EAAhB,UACQ,uBACIqB,KAAK,QACLjB,KAAK,OACLC,YAAY,QACZoB,UAAQ,EACRlB,MAAOM,EACPP,SAAUA,IACd,uBACIe,KAAK,WACLjB,KAAK,WACLC,YAAY,WACZoB,UAAQ,EACRlB,MAAOQ,EACPT,SAAUA,IACd,uBAAOF,KAAK,SAASG,MAAOU,EAAa,gBAAkB,WAC1DE,KAEL,sBAAMV,QArBU,kBAAKS,GAAc,SAACQ,GAAD,OAASA,MAqB5C,SAA+BT,EAAa,UAAY,uBCGrDU,EAtDJ,WAAK,IAAD,EACe9C,mBAAS,IADxB,gCAEqBA,mBAAS,KAF9B,gCAGsBA,oBAAS,IAH/B,gCAIYA,mBAAS,KAJrB,mBA+BL+C,GA/BK,UA+BQ,uCAAE,WAAM3B,GAAN,iBAAAf,EAAA,4DAGP,YAFMmC,EAAUpB,EAAnBO,OAASa,MAGZQ,EAAS,IAAI3D,EAAiBI,KAAKwD,mBACvB,WAAPT,IACLQ,EAAU,IAAI3D,EAAiBI,KAAKyD,oBANvB,SAQC1D,EAAY2D,gBAAgBH,GAR7B,yDAAF,uDAWnB,OACI,gCACI,cAAC,EAAD,IACA,gCACI,wBAAQR,KAAK,SAASZ,QAASmB,EAA/B,kCACA,wBAAQP,KAAK,SAASZ,QAASmB,EAA/B,0C,QCaDK,EA5DH,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAASC,EAAW,EAAXA,QAAW,EACFtD,oBAAS,GADP,mBACvBuD,EADuB,KACdC,EADc,OAEAxD,mBAASqD,EAASI,MAFlB,mBAEvBC,EAFuB,KAEbC,EAFa,KAGxBC,EAAa,uCAAC,sBAAAvD,EAAA,0DACLwD,OAAOC,QAAQ,8CADV,gCAGNxE,EAAU0B,IAAV,iBAAwBqC,EAASU,KAAMC,SAHjC,uBAINtE,EAAeuE,WAAWZ,EAASa,eAAeF,SAJ5C,2CAAD,qDAObG,EAAgB,kBAAKX,GAAW,SAAAX,GAAI,OAAKA,MACzC1B,EAAQ,uCAAC,WAAMC,GAAN,SAAAf,EAAA,6DACXe,EAAMC,iBADK,SAEJ/B,EAAU0B,IAAV,iBAAwBqC,EAASU,KAAMK,OAAO,CACjDX,KAAKC,IAHE,OAKXF,GAAW,GALA,2CAAD,sDAYd,OACI,8BAEQD,EACA,qCACA,uBAAMpC,SAAUA,EAAhB,UACI,uBACII,KAAK,OACLC,YAAY,kBACZC,SAdL,SAACL,GAAS,IACPM,EAAQN,EAAhBO,OAAQD,MACdiC,EAAYjC,IAaIA,MAAOgC,EACPd,UAAQ,IAEZ,uBAAOrB,KAAK,SAASG,MAAM,oBAE/B,wBAAQE,QAASuC,EAAjB,uBAIJ,qCACA,6BAAKd,EAASI,OACjBJ,EAASa,eACN,qBAAKG,IAAKhB,EAASa,cAAeI,MAAM,OAAOC,OAAO,SAErDjB,GACG,qCACI,wBAAQ1B,QAASgC,EAAjB,0BACA,wBAAQhC,QAASuC,EAAjB,iC,QCULK,EA3DI,SAAC,GAAa,IAAZ3E,EAAW,EAAXA,QAAW,EACJG,mBAAS,IADL,mBACrByE,EADqB,KACfC,EADe,OAEK1E,mBAAS,IAFd,mBAErB2E,EAFqB,KAEVC,EAFU,KAGtBzD,EAAQ,uCAAC,WAAOC,GAAP,qBAAAf,EAAA,yDACXe,EAAMC,iBACF6C,EAAc,GACF,IAAbS,EAHQ,wBAILE,EAAcnF,EAAeoF,MAAMC,MAArB,UAA8BlF,EAAQW,IAAtC,YAA6CwE,gBAJtD,SAKUH,EAAcI,UAAUN,EAAW,YAL7C,cAKLO,EALK,gBAMUA,EAASJ,IAAIK,iBANvB,OAMXjB,EANW,sBAQLb,EAAU,CACZI,KAAKgB,EACLW,SAASC,KAAKC,MACdC,UAAU1F,EAAQW,IAClB0D,iBAZO,UAcL5E,EAAUgB,WAAW,UAAUkF,IAAInC,GAd9B,QAeXqB,EAAS,IACTE,EAAc,IAhBH,4CAAD,sDAmCd,OACI,uBAAMzD,SAAUA,EAAhB,UACA,uBACIO,MAAO+C,EACPhD,SApBO,SAACL,GAAS,IACNM,EAAQN,EAAhBO,OAAQD,MACfgD,EAAShD,IAmBLH,KAAK,OACLC,YAAY,uBACZiE,UAAW,MACf,uBAAOlE,KAAK,OAAOmE,OAAO,UAAUjE,SAnBrB,SAACL,GAAS,IAEnBuE,EADiBvE,EAAhBO,OAAQiE,MACM,GACfC,EAAQ,IAAIC,WAClBD,EAAOE,UAAU,SAACC,GAAiB,IACTC,EAASD,EAAxBE,cAAeD,OACtBrB,EAAcqB,IAElBJ,EAAOM,cAAcR,MAYrB,uBAAOpE,KAAK,SAASG,MAAM,UAC1BiD,GACG,gCACI,qBAAKN,IAAKM,EAAYL,MAAM,OAAOC,OAAO,SAC1C,wBAAQ3C,QAdI,kBAAIgD,EAAc,OAc9B,0BC1BDwB,EAxBJ,SAAC,GAAa,IAAZvG,EAAW,EAAXA,QAAW,EACKG,mBAAS,IADd,mBACbW,EADa,KACN0F,EADM,KAUpB,OARAnF,qBAAU,WACN5B,EAAUgB,WAAW,UAAUgG,YAAW,SAAAC,GACtC,IAAMC,EAAYD,EAASzF,KAAKC,KAAI,SAAAC,GAAG,oBACnC+C,GAAG/C,EAAI+C,IACJ/C,EAAIC,WACXoF,EAAUG,QAEhB,IAEE,gCACI,cAAC,EAAD,CAAc3G,QAASA,IACvB,8BACKc,EAAOI,KAAI,SAAC0D,GAAD,OACR,cAAC,EAAD,CAEApB,SAAUoB,EACVnB,QAASmB,EAAMc,YAAY1F,EAAQW,KAF9BiE,EAAMV,aCRhB0C,EAXG,SAAC,GAAD,IAAE5G,EAAF,EAAEA,QAAF,OACd,8BACI,+BACI,6BACI,cAAC,IAAD,CAAM6G,GAAG,IAAT,oBAEJ,6BACI,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqB7G,EAAQI,YAA7B,+BCoBD0G,EAtBE,SAAC,GAAqC,IAApC/G,EAAmC,EAAnCA,YAAYgH,EAAuB,EAAvBA,WAAW/G,EAAY,EAAZA,QACtC,OACI,eAAC,IAAD,WACK+G,GAAc,cAAC,EAAD,CAAY/G,QAASA,IACpC,cAAC,IAAD,UACK+G,EACD,qCACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMjH,QAASA,MAEnB,cAAC,IAAD,CAAOgH,OAAK,EAACC,KAAK,WAAlB,SACI,cAACC,EAAD,CAASlH,QAASA,EAASD,YAAaA,SAG5C,cAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,YCmBLE,MArCf,WAAgB,IAAD,EACQhH,oBAAS,GADjB,mBACNiH,EADM,KACDC,EADC,OAEclH,mBAAS,MAFvB,mBAENH,EAFM,KAEEsH,EAFF,KAyBb,OAtBAjG,qBAAU,WACR1B,EAAY4H,oBAAmB,SAACC,GAE5BF,EADCE,EACU,CACTpH,YAAaoH,EAAKpH,YAClBO,IAAI6G,EAAK7G,IACTc,cAAc,SAACgG,GAAD,OAAQD,EAAK/F,cAAcgG,KAGhC,MAEbJ,GAAQ,QAEV,IAUA,qCACGD,EAAK,cAAC,EAAD,CACNrH,YAXc,WAChB,IAAMyH,EAAK7H,EAAY+H,YACvBJ,EAAW,CACTlH,YAAaoH,EAAKpH,YAClBO,IAAI6G,EAAK7G,IACTc,cAAc,SAACgG,GAAD,OAAQD,EAAK/F,cAAcgG,OAOzCV,WAAYY,QAAQ3H,GACpBA,QAASA,IAAW,kBACpB,oCAAS,IAAIwF,MAAOoC,cAApB,kBC/BNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4ee206ef.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n    apiKey:process.env.REACT_APP_API_KEY,\r\n    databaseURL:process.env.REACT_APP_DATABASE_URL,\r\n    authDomain:process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId:process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:process.env.REACT_APP_MESSAGIN_ID,\r\n    appId:process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance=firebase;\r\n\r\nexport const dbService=firebase.firestore();\r\nexport const authService = firebase.auth();\r\nexport const storageService= firebase.storage();","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default ({refreshUser,userObj})=>{\r\n    const history = useHistory();\r\n    const [newDisplayName,setNewDisplayName]=useState(userObj.displayName);\r\n    const onoLogOutClick=()=> {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        refreshUser();\r\n    }\r\n    \r\n    const onChange=(event)=>{\r\n        const{\r\n            target:{value}\r\n        }=event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const getMyNweets= async()=>{\r\n        const nweets=await dbService\r\n        .collection(\"nweets\")\r\n        .where(\"creatorId\",\"==\",userObj.uid)\r\n        .orderBy(\"createAt\",\"desc\") //asc는 올림차순 desc는 내림차순\r\n        .get()  //where은 필터링을 도와줌\r\n        console.log(nweets.docs.map((doc)=>doc.data()))\r\n    }\r\n    useEffect(()=>{\r\n        getMyNweets();\r\n    },[])\r\n    const onSubmit=async(event)=>{\r\n        event.preventDefault();\r\n        if(userObj.displayName!==newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName:newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Display name\"\r\n                onChange={onChange}\r\n                value={newDisplayName}/>\r\n            <input type=\"submit\" value=\"Update Profile\"/>\r\n        </form>\r\n        <button onClick={onoLogOutClick}>Log Out</button>\r\n        </>\r\n    )\r\n}\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm=()=>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount,setNewAccount]=useState(true);\r\n    const [error,setError]=useState(\"\"); //에러생성시 에러 표시\r\n    const onChange = (event)=>{\r\n        const {target:{name,value}}=event; // const {name,value}=event.target 과 동일\r\n        if(name===\"email\"){\r\n            setEmail(value)\r\n        }else if(name===\"password\"){\r\n            setPassword(value)\r\n        }\r\n      }\r\n      const onSubmit = async(event)=>{\r\n          event.preventDefault(); // onSubmit에서 event.preventDefault를 한 이유는 submit했을때 초기화 X\r\n          try{\r\n              let data\r\n              if(newAccount){\r\n                  data=await authService.createUserWithEmailAndPassword(\r\n                      email,password\r\n                  );\r\n                  //newAccount 가 true 일떄는 create Account(계정생성버튼)\r\n              }else{\r\n                  data=await authService.signInWithEmailAndPassword(email,password);\r\n                  //new Account 가 false 일떄는 Login 되어있는 상태(로그인)\r\n              }\r\n          } catch(error){\r\n              setError(error.message);\r\n          }\r\n      }\r\n      const toggleAccount = () =>setNewAccount((prev)=>!prev); // 이전값 prev 를 true랑 false로 변경해서 span onclick했을때 값 변경\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n                <input \r\n                    name=\"email\" \r\n                    type=\"text\" \r\n                    placeholder=\"Email\" \r\n                    required \r\n                    value={email}\r\n                    onChange={onChange}/>\r\n                <input \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required \r\n                    value={password}\r\n                    onChange={onChange}/>\r\n                <input type=\"submit\" value={newAccount ? \"Creat Account\" : \"Log In\"}/>\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n            </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React, { useState } from 'react';\r\nconst Auth=()=>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount,setNewAccount]=useState(true);\r\n    const [error,setError]=useState(\"\"); //에러생성시 에러 표시\r\n    const onChange = (event)=>{\r\n      const {target:{name,value}}=event; // const {name,value}=event.target 과 동일\r\n      if(name===\"email\"){\r\n          setEmail(value)\r\n      }else if(name===\"password\"){\r\n          setPassword(value)\r\n      }\r\n    }\r\n    const onSubmit = async(event)=>{\r\n        event.preventDefault(); // onSubmit에서 event.preventDefault를 한 이유는 submit했을때 초기화 X\r\n        try{\r\n            let data\r\n            if(newAccount){\r\n                data=await authService.createUserWithEmailAndPassword(\r\n                    email,password\r\n                );\r\n                //newAccount 가 true 일떄는 create Account(계정생성버튼)\r\n            }else{\r\n                data=await authService.signInWithEmailAndPassword(email,password);\r\n                //new Account 가 false 일떄는 Login 되어있는 상태(로그인)\r\n            }\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const toggleAccount = () =>setNewAccount((prev)=>!prev); // 이전값 prev 를 true랑 false로 변경해서 span onclick했을때 값 변경\r\n    const onSocialClick =async(event)=>{\r\n        const {target: {name},} = event; // 이것은 const {name} = event.target  과 같다  event.target.name을 name에할당 es6에 있음 참고\r\n        let provider;\r\n        if(name===\"google\"){\r\n            provider=new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name===\"github\"){\r\n            provider= new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data= await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <AuthForm/>\r\n            <div>\r\n                <button name=\"google\" onClick={onSocialClick}>Continue with Google</button>\r\n                <button name=\"github\" onClick={onSocialClick}>Continue withe Github</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet=({nweetObj,isOwner})=>{\r\n    const [editing, setEditing]=useState(false);\r\n    const [newNweet, setNewNweet]=useState(nweetObj.text);\r\n    const onDeleteClick=async()=>{\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = ()=> setEditing(prev => !prev);\r\n    const onSubmit=async(event)=>{\r\n        event.preventDefault();\r\n        await  dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet\r\n        })\r\n        setEditing(false);\r\n    }\r\n    const onChange=(event)=>{\r\n        const{target:{value}}=event;\r\n        setNewNweet(value);\r\n        \r\n    }\r\n    return(\r\n        <div>\r\n            {\r\n                editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit}>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Edit your nweet\" \r\n                        onChange={onChange}\r\n                        value={newNweet} \r\n                        required\r\n                    />\r\n                    <input type=\"submit\" value=\"Update Input\"/>\r\n                </form> \r\n                <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n                ):\r\n                (\r\n            <>      \r\n            <h4>{nweetObj.text}</h4>\r\n        {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\r\n        )}\r\n            {isOwner && (\r\n                <>\r\n                    <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                    <button onClick={toggleEditing}>Edit Nweet</button>\r\n                </>\r\n            )}\r\n            </>\r\n                )\r\n            }\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Nweet;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst NweetFactory=({userObj})=>{\r\n    const [nweet,setNweet] =useState(\"\");\r\n    const [attachment,setAttachment]=useState(\"\"); \r\n    const onSubmit=async (event)=>{\r\n        event.preventDefault();\r\n        let attachmentUrl=\"\";\r\n        if(attachment !=\"\"){\r\n        const attachmentRef=storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n        const response=await attachmentRef.putString(attachment,\"data_url\");\r\n        attachmentUrl= await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj ={\r\n            text:nweet, \r\n            createAt:Date.now(),\r\n            creatorId:userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n        \r\n    }\r\n    const onChange=(event)=>{\r\n        const {target:{value}}=event; //event.target.value를 value값에 저장\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange=(event)=>{\r\n        const {target:{files}}=event;\r\n        const theFile= files[0];\r\n        const reader= new FileReader();\r\n        reader.onloadend=(finishedEvent)=>{\r\n            const {currentTarget:{result}}=finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment=()=>setAttachment(null);\r\n    return(\r\n        <form onSubmit={onSubmit} >\r\n        <input \r\n            value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\" \r\n            placeholder=\"What's on your mind?\" \r\n            maxLength={120}/>\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n        <input type=\"submit\" value=\"Nweet\"/>\r\n        {attachment &&(\r\n            <div>\r\n                <img src={attachment} width=\"50px\" height=\"50px\"/>\r\n                <button onClick={onClearAttachment}>Clear</button>\r\n            </div>\r\n        )}\r\n        \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home=({userObj})=>{\r\n    const [nweets,setNweets]=useState([]);\r\n    useEffect(()=>{\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot=>{ //onSnapshot은 db에서 정보를 받아옴\r\n            const nweetArray= snapshot.docs.map(doc=>({\r\n                id:doc.id, \r\n                ...doc.data()}));\r\n            setNweets(nweetArray);\r\n        });\r\n    },[]);\r\n    return(\r\n        <div>\r\n            <NweetFactory userObj={userObj}/>\r\n            <div>\r\n                {nweets.map((nweet)=>(\r\n                    <Nweet \r\n                    key={nweet.id} \r\n                    nweetObj={nweet}\r\n                    isOwner={nweet.creatorId===userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nconst Navigation =({userObj})=>\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/profile\">{userObj.displayName}의 My Profile</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router,Switch,Route,Link} from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter =({refreshUser,isLoggedIn,userObj})=> {\r\n    return (\r\n        <Router> \r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? \r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                </Route>\r\n                </> : \r\n                <Route exact path=\"/\">\r\n                    <Auth/>\r\n                </Route>}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n \r\nexport default AppRouter;","import React,{useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from 'fbase';\n\nfunction App() {\n  const [init,setInit]=useState(false);\n  const [userObj,setUserObj]=useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid:user.uid,\n          updateProfile:(args)=>user.updateProfile(args),\n        });\n      }else{\n        setUserObj(null)\n      }\n      setInit(true);\n    });\n  },[])\n  const refreshUser=()=>{\n    const user=authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid:user.uid,\n      updateProfile:(args)=>user.updateProfile(args),\n    });\n  }\n  return(\n    <>\n      {init?<AppRouter \n      refreshUser={refreshUser}\n      isLoggedIn={Boolean(userObj)} \n      userObj={userObj}/>:\"Initializing...\"}\n      <footer>{new Date().getFullYear()} Nwitter</footer>\n    </>\n  )\n   \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}